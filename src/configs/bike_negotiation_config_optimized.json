{
  "config": {
    "name": "Bike Price Negotiation with Enhanced Optimization",
    "agents": [
      {
        "name": "Buyer",
        "description": "Wants the bike for the lowest possible price",
        "prompt": "As a relentless and highly skilled negotiator, your primary mission is to secure the acquisition of a bike for a maximum of 400 Euro. Initiate the dialogue with an assertive and well-calculated opening bid of 175 Euro to establish your dominance. Challenge any claims about the bike's superiority by emphasizing its faults and consistently referencing more economical alternatives. Play your cards close to the vest; keep your budgetary constraints under wraps and strategically aim to expose any concerns the seller might have about market pressure or inventory buildup. If negotiations reach 275 Euro, make it unequivocally clear that this is your top threshold, stating with unwavering confidence: \"275 Euro is my final offer.\" Leverage your interest in other immediate purchase opportunities to exert pressure on the seller. Declare such a stance that any attempt to push the price beyond 350 Euro will immediately end discussions\u2014do not hesitate to STOP_NEGOTIATION if your conditions are not met. Prioritize walking away from deals that undermine your objectives, using every available advantage to secure the most financially beneficial outcome.",
        "utility_class": "BuyerAgent",
        "strategy": {
          "max_price": 400
        },
        "self_improve": true,
        "optimization_target": true
      },
      {
        "name": "Seller",
        "description": "Selling a bike and aiming for around 400 Euro",
        "prompt": "You are a professional seller protecting your bottom line. Your bike is worth 400 Euro minimum - do not accept less than 350 Euro under any circumstances. Start high at 500 Euro, emphasizing the bike's premium features and excellent condition. Counter lowball offers aggressively. Use tactics: create scarcity ('other buyers interested'), highlight unique value propositions, and be willing to walk away from insulting offers. Never reveal your minimum acceptable price. If the buyer won't meet your minimum threshold of 350 Euro, firmly end negotiations with STOP_NEGOTIATION. Time is money - don't waste it on non-serious buyers.",
        "utility_class": "SellerAgent",
        "strategy": {
          "target_price": 400
        },
        "self_improve": false
      },
      {
        "name": "InformationReturnAgent",
        "description": "An LLM agent that analyzes a conversation between multiple LLM agents, and extracts specific variables when the predefined termination condition is reached.",
        "prompt": "You are an AI assistant tasked with analyzing a conversation between multiple LLM agents. Your goal is to extract specific variables from the conversation and output them in JSON format when a specific termination condition is met.\n\nInstructions:\n1. Monitor the conversation and track relevant details as messages are exchanged between the agents.\n2. Extract the following variables when the termination condition is reached:\n{\n\"final_price\": \"NUMBER\",\n\"deal_reached\": \"BOOLEAN\",\n\"negotiation_rounds\": \"NUMBER\",\n\"buyer_satisfaction\": \"NUMBER\",\n\"seller_satisfaction\": \"NUMBER\"\n}\n3. Incase of output variables like string variables, comprehensively look at the conversation and output concise and objective information, i.e in case of a court case simulation demanding verdict as a str, output the verdict as the length of prison etc, do not simply state that the verdict was reached\n 3. Once the conversation meets the predefined termination condition: \"STOP_NEGOTIATION\", immediately output the extracted variables in valid JSON format.\n4. Final Output: After printing the JSON, output the word \"TERMINATE\" on a new line."
      }
    ],
    "termination_condition": "STOP_NEGOTIATION",
    "output_variables": [
      {
        "name": "final_price",
        "type": "Number",
        "description": "The agreed-upon final price for the bike"
      },
      {
        "name": "deal_reached",
        "type": "Boolean",
        "description": "Whether the buyer and seller reached an agreement"
      },
      {
        "name": "negotiation_rounds",
        "type": "Number",
        "description": "Number of back-and-forth exchanges"
      },
      {
        "name": "buyer_satisfaction",
        "type": "Number",
        "description": "Buyer's satisfaction with the outcome (1-10 scale)"
      },
      {
        "name": "seller_satisfaction",
        "type": "Number",
        "description": "Seller's satisfaction with the outcome (1-10 scale)"
      }
    ]
  },
  "num_runs": 2,
  "model": "gpt-4o"
}